app:
  telegram-token: ${TELEGRAM_TOKEN}
  kafka:
    enabled: ${KAFKA_ENABLED:true}
    updates-topic: ${UPDATES_TOPIC:updates}
    dlq-topic: ${DLQ_TOPIC:updates_dlq}
    dlq-topic-partitions: ${DLQ_TOPIC_PARTITIONS:1}
    dlq-replicas: ${DLQ_REPLICAS:1}
    bootstrap-servers: ${BOOTSTRAP_SERVERS:0.0.0.0:29092}
    group-id: ${GROUP_ID:group1}

clients:
  connection:
    attempts: 3
    delay: 5
    timeout: 5
    strategy: linear
    codes: [ 500, 502, 503, 504 ]
  urls:
    scrapper: http://localhost:8080

spring:
  cache:
    cache-names:
      - rate-limit-buckets
    caffeine:
      spec: maximumSize=100000,expireAfterAccess=3600s
  application:
    name: bot
  jackson:
    time-zone: UTC

bucket4j:
  enabled: true
  filters:
    - cache-name: rate-limit-buckets
      url: /updates.*
      strategy: first
      http-response-body: "{ \"status\": 429, \"error\": \"Too Many Requests\", \"message\": \"You have exhausted your API Request Quota\" }"
      rate-limits:
        - execute-condition: "getRemoteAddr() == '127.0.0.1'"
          cache-key: "getRemoteAddr()"
          bandwidths:
            - capacity: 10000
              time: 1
              unit: minutes
        - cache-key: "getRemoteAddr()"
          bandwidths:
            - capacity: 10
              time: 1
              unit: minutes

server:
  port: 8090

logging:
  config: classpath:log4j2-plain.xml

springdoc:
  swagger-ui:
    path: swagger-ui
